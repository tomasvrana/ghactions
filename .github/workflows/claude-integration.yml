name: Claude Integration

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  process-request:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Get context
        id: context
        run: |
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            echo "comment=${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
          else
            echo "comment=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
          fi
          echo "repo=${{ github.repository }}" >> $GITHUB_OUTPUT
          echo "default_branch=${{ github.event.repository.default_branch }}" >> $GITHUB_OUTPUT
          
      - name: Call Anthropic API
        id: claude
        uses: actions/github-script@v7
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        with:
          script: |
            const response = await fetch('https://api.anthropic.com/v1/messages', {
              method: 'POST',
              headers: {
                'x-api-key': process.env.ANTHROPIC_API_KEY,
                'anthropic-version': '2023-06-01',
                'content-type': 'application/json'
              },
              body: JSON.stringify({
                model: 'claude-3-5-sonnet-20241022',
                messages: [
                  {
                    role: 'system',
                    content: `You are processing GitHub repository updates. Repository: ${{ steps.context.outputs.repo }}, Default Branch: ${{ steps.context.outputs.default_branch }}`
                  },
                  {
                    role: 'user',
                    content: `${{ steps.context.outputs.comment }}`
                  }
                ],
                max_tokens: 4096
              })
            });
            
            const data = await response.json();
            return data.content[0].text;
            
      - name: Process Claude's response
        id: process
        uses: actions/github-script@v7
        with:
          script: |
            const response = ${{ steps.claude.outputs.result }};
            // Process response and create files as needed
            // This will be expanded based on the response format we define
            
      - name: Create branch if needed
        if: ${{ github.event.issue.pull_request == null }}
        run: |
          BRANCH_NAME="update/claude-$(date +%s)"
          git checkout -b $BRANCH_NAME
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          
      - name: Commit changes
        run: |
          git add .
          git commit -m "Update from Claude: ${{ steps.context.outputs.comment }}"
          git push origin HEAD
          
      - name: Create Pull Request
        if: ${{ github.event.issue.pull_request == null }}
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Update from Claude',
              body: 'Automated updates based on issue/comment',
              head: process.env.BRANCH_NAME,
              base: '${{ steps.context.outputs.default_branch }}'
            });
            
            // Comment on the original issue with the PR link
            const body = `Created PR: ${pr.data.html_url}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });